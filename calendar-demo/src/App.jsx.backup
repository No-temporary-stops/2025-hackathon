import React, { useState } from "react";
import { Calendar, momentLocalizer, Views } from "react-big-calendar";
import moment from "moment";
import "moment/locale/zh-tw"; // 中文本地化
import "react-big-calendar/lib/css/react-big-calendar.css";

// 設定中文時間格式
moment.locale('zh-tw');
const localizer = momentLocalizer(moment);

// 中文化日曆顯示文字
const messages = {
  allDay: '全天',
  previous: '上一個',
  next: '下一個',
  today: '今天',
  month: '月',
  week: '週',
  day: '日',
  agenda: '議程',
  date: '日期',
  time: '時間',
  event: '事件',
  noEventsInRange: '此時間範圍內沒有事件',
  showMore: total => `還有 ${total} 個事件`,
};

const MyCalendar = () => {
  // 儲存所有事件
  const [events, setEvents] = useState([
    {
      title: "繳交數學作業",
      start: new Date(2025, 8, 20, 10, 0),
      end: new Date(2025, 8, 20, 12, 0),
    },
    {
      title: "行政繳費截止",
      start: new Date(2025, 8, 22, 23, 59),
      end: new Date(2025, 8, 22, 23, 59),
    },
  ]);

  // 被選到的事件
  const [selectedEvent, setSelectedEvent] = useState(null);
  
  // 日曆視圖設定
  const [currentDate, setCurrentDate] = useState(new Date());
  const [currentView, setCurrentView] = useState(Views.MONTH);

  // 新事件輸入用
  const getDefaultTimes = () => {
    const now = new Date();
    const start = new Date(now);
    start.setMinutes(0, 0, 0); // 設定為整點
    const end = new Date(start);
    end.setHours(start.getHours() + 1); // 預設持續1小時
    
    return {
      start: formatDateTimeLocal(start),
      end: formatDateTimeLocal(end)
    };
  };

  const [newEvent, setNewEvent] = useState({
    title: "",
    start: "",
    end: "",
  });
  
  // 表單顯示狀態
  const [showForm, setShowForm] = useState(false);

  // 日曆導航處理函數
  const handleNavigate = (newDate) => {
    setCurrentDate(newDate);
  };

  const handleViewChange = (view) => {
    setCurrentView(view);
  };

  // 回到今天
  const handleToday = () => {
    setCurrentDate(new Date());
  };

  // 加入新事件
  const handleAddEvent = (e) => {
    e.preventDefault();

    if (!newEvent.title || !newEvent.start || !newEvent.end) {
      alert("請完整輸入標題與時間！");
      return;
    }

    const startDate = new Date(newEvent.start);
    const endDate = new Date(newEvent.end);
    
    if (endDate <= startDate) {
      alert("結束時間必須晚於開始時間！");
      return;
    }

    setEvents([
      ...events,
      {
        title: newEvent.title,
        start: startDate,
        end: endDate,
      },
    ]);

    setNewEvent({ title: "", start: "", end: "" });
    setShowForm(false);
  };

  // 格式化日期時間用於輸入框
  const formatDateTimeLocal = (date) => {
    if (!date) {
      // 如果沒有日期，返回當前時間作為預設值
      const now = new Date();
      const offset = now.getTimezoneOffset() * 60000;
      const localTime = new Date(now.getTime() - offset);
      return localTime.toISOString().slice(0, 16);
    }
    if (typeof date === 'string' && date.includes('T')) {
      // 如果已經是正確格式的字符串，直接返回
      return date.slice(0, 16);
    }
    const d = new Date(date);
    const offset = d.getTimezoneOffset() * 60000;
    const localTime = new Date(d.getTime() - offset);
    return localTime.toISOString().slice(0, 16);
  };

  return (
    <div style={{ 
      minHeight: "100vh",
      backgroundColor: "#f5f7fa",
      fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif" 
    }}>
      <div style={{ 
        maxWidth: "1200px",
        margin: "0 auto",
        padding: "20px" 
      }}>
        {/* 標題區 */}
        <div style={{ 
          display: "flex", 
          justifyContent: "space-between", 
          alignItems: "center", 
          marginBottom: "30px",
          padding: "20px",
          backgroundColor: "white",
          borderRadius: "12px",
          boxShadow: "0 2px 8px rgba(0,0,0,0.1)"
        }}>
          <h1 style={{ 
            margin: 0, 
            color: "#2d3748",
            fontSize: "28px",
            fontWeight: "600"
          }}>
            📅 校園日曆
          </h1>
          <button 
            onClick={() => {
              if (!showForm) {
                // 打開表單時設定預設時間
                const defaultTimes = getDefaultTimes();
                setNewEvent({
                  title: "",
                  start: defaultTimes.start,
                  end: defaultTimes.end,
                });
              }
              setShowForm(!showForm);
            }}
            style={{
              padding: "12px 24px",
              backgroundColor: showForm ? "#e53e3e" : "#4299e1",
              color: "white",
              border: "none",
              borderRadius: "8px",
              cursor: "pointer",
              fontSize: "14px",
              fontWeight: "500",
              transition: "all 0.2s ease",
              boxShadow: "0 2px 4px rgba(0,0,0,0.1)"
            }}
            onMouseOver={(e) => {
              e.target.style.transform = "translateY(-1px)";
              e.target.style.boxShadow = "0 4px 8px rgba(0,0,0,0.15)";
            }}
            onMouseOut={(e) => {
              e.target.style.transform = "translateY(0)";
              e.target.style.boxShadow = "0 2px 4px rgba(0,0,0,0.1)";
            }}
          >
            {showForm ? "✕ 取消" : "➕ 新增事件"}
          </button>
        </div>

      {/* 自定義工具列 */}
      <div style={{ 
        display: "flex", 
        gap: "10px", 
        marginBottom: "20px", 
        alignItems: "center",
        flexWrap: "wrap"
      }}>
        <button 
          onClick={handleToday}
          style={{
            padding: "8px 15px",
            backgroundColor: "#28a745",
            color: "white",
            border: "none",
            borderRadius: "3px",
            cursor: "pointer"
          }}
        >
          今天
        </button>
        
        <div style={{ display: "flex", gap: "5px" }}>
          <button 
            onClick={() => handleNavigate(moment(currentDate).subtract(1, currentView).toDate())}
            style={{
              padding: "8px 12px",
              backgroundColor: "#6c757d",
              color: "white",
              border: "none",
              borderRadius: "3px",
              cursor: "pointer"
            }}
          >
            ←
          </button>
          <button 
            onClick={() => handleNavigate(moment(currentDate).add(1, currentView).toDate())}
            style={{
              padding: "8px 12px",
              backgroundColor: "#6c757d",
              color: "white",
              border: "none",
              borderRadius: "3px",
              cursor: "pointer"
            }}
          >
            →
          </button>
        </div>
        
        <span style={{ 
          fontSize: "18px", 
          fontWeight: "bold",
          minWidth: "200px",
          textAlign: "center"
        }}>
          {moment(currentDate).format('YYYY年MM月')}
        </span>
        
        <div style={{ display: "flex", gap: "5px", marginLeft: "auto" }}>
          {[Views.MONTH, Views.WEEK, Views.DAY, Views.AGENDA].map((view) => (
            <button
              key={view}
              onClick={() => handleViewChange(view)}
              style={{
                padding: "8px 12px",
                backgroundColor: currentView === view ? "#007bff" : "#e9ecef",
                color: currentView === view ? "white" : "#495057",
                border: "1px solid #dee2e6",
                borderRadius: "3px",
                cursor: "pointer"
              }}
            >
              {view === Views.MONTH && '月'}
              {view === Views.WEEK && '週'}
              {view === Views.DAY && '日'}
              {view === Views.AGENDA && '議程'}
            </button>
          ))}
        </div>
      </div>

      {/* 日曆 */}
      <Calendar
        localizer={localizer}
        events={events}
        startAccessor="start"
        endAccessor="end"
        style={{ height: 500 }}
        messages={messages}
        date={currentDate}
        view={currentView}
        onNavigate={handleNavigate}
        onView={handleViewChange}
        onSelectEvent={(event) => setSelectedEvent(event)} // 點擊事件 → 顯示詳情
        toolbar={false} // 隱藏內建工具列
        popup
        step={60}
        showMultiDayTimes
        defaultDate={new Date()}
      />

      {/* 顯示點擊的事件 */}
      {selectedEvent && (
        <div
          style={{
            marginTop: "20px",
            padding: "20px",
            border: "2px solid #007bff",
            borderRadius: "8px",
            backgroundColor: "#f8f9fa",
            boxShadow: "0 2px 4px rgba(0,0,0,0.1)"
          }}
        >
          <div style={{ display: "flex", justifyContent: "space-between", alignItems: "center", marginBottom: "15px" }}>
            <h3 style={{ margin: 0, color: "#007bff" }}>📌 事件詳情</h3>
            <button 
              onClick={() => setSelectedEvent(null)}
              style={{
                padding: "5px 10px",
                backgroundColor: "#dc3545",
                color: "white",
                border: "none",
                borderRadius: "3px",
                cursor: "pointer"
              }}
            >
              ✕
            </button>
          </div>
          
          <div style={{ fontSize: "16px", lineHeight: "1.6" }}>
            <div style={{ marginBottom: "10px" }}>
              <span style={{ fontWeight: "bold", color: "#495057" }}>標題：</span>
              <span style={{ marginLeft: "10px" }}>{selectedEvent.title}</span>
            </div>
            <div style={{ marginBottom: "10px" }}>
              <span style={{ fontWeight: "bold", color: "#495057" }}>開始時間：</span>
              <span style={{ marginLeft: "10px" }}>
                {moment(selectedEvent.start).format('YYYY年MM月DD日 HH:mm')}
              </span>
            </div>
            <div style={{ marginBottom: "10px" }}>
              <span style={{ fontWeight: "bold", color: "#495057" }}>結束時間：</span>
              <span style={{ marginLeft: "10px" }}>
                {moment(selectedEvent.end).format('YYYY年MM月DD日 HH:mm')}
              </span>
            </div>
            <div>
              <span style={{ fontWeight: "bold", color: "#495057" }}>時長：</span>
              <span style={{ marginLeft: "10px" }}>
                {moment.duration(moment(selectedEvent.end).diff(moment(selectedEvent.start))).humanize()}
              </span>
            </div>
          </div>
        </div>
      )}

      {/* 新增事件表單 */}
      {showForm && (
        <div
          style={{
            marginTop: "20px",
            padding: "20px",
            border: "1px solid #ddd",
            borderRadius: "8px",
            backgroundColor: "#f8f9fa"
          }}
        >
          <h3>➕ 新增事件</h3>
          <form onSubmit={handleAddEvent}>
            <div style={{ marginBottom: "15px" }}>
              <label style={{ display: "block", marginBottom: "5px", fontWeight: "bold" }}>
                事件標題 *
              </label>
              <input
                type="text"
                placeholder="例：繳交數學作業"
                value={newEvent.title}
                onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}
                style={{ 
                  width: "100%",
                  padding: "8px",
                  border: "1px solid #ced4da",
                  borderRadius: "4px",
                  fontSize: "14px"
                }}
                required
              />
            </div>
            
            <div style={{ display: "flex", gap: "15px", marginBottom: "15px" }}>
              <div style={{ flex: 1 }}>
                <label style={{ display: "block", marginBottom: "5px", fontWeight: "bold" }}>
                  開始時間 *
                </label>
                <input
                  type="datetime-local"
                  value={formatDateTimeLocal(newEvent.start)}
                  onChange={(e) => setNewEvent({ ...newEvent, start: e.target.value })}
                  style={{ 
                    width: "100%",
                    padding: "8px",
                    border: "1px solid #ced4da",
                    borderRadius: "4px",
                    fontSize: "14px"
                  }}
                  required
                />
              </div>
              
              <div style={{ flex: 1 }}>
                <label style={{ display: "block", marginBottom: "5px", fontWeight: "bold" }}>
                  結束時間 *
                </label>
                <input
                  type="datetime-local"
                  value={formatDateTimeLocal(newEvent.end)}
                  onChange={(e) => setNewEvent({ ...newEvent, end: e.target.value })}
                  style={{ 
                    width: "100%",
                    padding: "8px",
                    border: "1px solid #ced4da",
                    borderRadius: "4px",
                    fontSize: "14px"
                  }}
                  required
                />
              </div>
            </div>
            
            <div style={{ display: "flex", gap: "10px" }}>
              <button 
                type="submit"
                style={{
                  padding: "10px 20px",
                  backgroundColor: "#28a745",
                  color: "white",
                  border: "none",
                  borderRadius: "5px",
                  cursor: "pointer",
                  fontSize: "14px"
                }}
              >
                確認新增
              </button>
              <button 
                type="button"
                onClick={() => {
                  setShowForm(false);
                  setNewEvent({ title: "", start: "", end: "" });
                }}
                style={{
                  padding: "10px 20px",
                  backgroundColor: "#6c757d",
                  color: "white",
                  border: "none",
                  borderRadius: "5px",
                  cursor: "pointer",
                  fontSize: "14px"
                }}
              >
                取消
              </button>
            </div>
          </form>
        </div>
      )}
    </div>
  );
};

export default MyCalendar;
